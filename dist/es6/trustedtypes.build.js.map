{"version":3,"sources":["src/utils/eventHandlers.js","src/trustedtypes.js","src/data/trustedtypeconfig.js","src/utils/wrapper.js","src/enforcer.js","src/polyfill/full.js"],"names":["unsafeAttributeEventHandlers","getUnsafeAttributeEventHandlers","window","eventHandlers","name","HTMLElement","prototype","slice","push","isBrowser","rejectInputFn","TypeError","rejectInputDefaultPolicyFn","toLowerCase","toUpperCase","String","TrustedTypePolicy","TrustedTypePolicyFactory","trustedTypes","setPolicyNameRestrictions","trustedTypesBuilderTestOnly","privates","obj","v","privateMap","get","undefined","create","set","selfContained","collection","proto","getPrototypeOf","ObjectPrototype","Error","key","getOwnPropertyNames","defineProperty","value","lockdownTrustedType","SubClass","canonName","freeze","isTrustedTypeChecker","type","has","wrapPolicy","policyName","innerPolicy","creator","Ctor","methodName","method","DEFAULT_POLICY_NAME","policySpecificType","creatorSymbol","s","args","result","allowedValue","o","factory","policy","createTypeMapping","writable","configurable","enumerable","getTypeInternal_","tag","container","elNs","attrNs","canonicalTag","apply","ns","HTML_NS","map","hasOwnProperty","TYPE_MAP","getDefaultPolicy","defaultPolicy","assign","Object","forEach","Array","Symbol","WeakMap","policyNames","allowedNames","allowDuplicateNames","enforceNameRestrictions","TrustedType","TrustedScriptURL","TrustedHTML","TrustedScript","emptyHTML","emptyScript","SVG_NS","ATTR_PROPERTY_MAP","HTMLIFrameElement","keys","attr","createFunctionAllowed","api","createPolicy","match","indexOf","call","console","warn","wrappedPolicy","isHTML","isScriptURL","isScript","getAttributeType","tagName","attribute","elementNs","attributeNs","canonicalAttr","getPropertyType","property","getTypeMapping","namespaceUri","document","documentElement","namespaceURI","e","JSON","parse","stringify","allowedPolicyNames","allowDuplicates","length","el","clearPolicyNameRestrictions","resetDefaultPolicy","splice","parseCSP","cspString","WHITESPACE","trim","split","SEMICOLON","serializedDirective","reduce","parsed","directive","sort","fromCSP","TrustedTypeConfig$$module$src$data$trustedtypeconfig.parseCSP","enforce","ENFORCEMENT_DIRECTIVE_NAME","includes","policies","POLICIES_DIRECTIVE_NAME","filter","p","charAt","TrustedTypeConfig","isLoggingEnabled","isEnforcementEnabled","installFunction","object","fn","Reflect","getOwnPropertyDescriptor","stringifyForRangeHack","typeMap","TrustedTypes","STRING_TO_TYPE","attrs","k","entries","TYPE_CHECKER_MAP","TYPE_PRODUCER_MAP","instanceOfDomProperty","winProp","windowObject","getConstructorName_","createElement","constructor","wrapSetter_","Node","useObject","descriptor","originalSetter","stopAt","Function","getKey_","originalSetters_","enforcingSetter","that","enforce_","config_","wrapWithEnforceFunction_","argNumber","wrapFunction_","originalFn","wrapSetAttribute_","Element","setAttributeWrapper_","bind","setAttributeNSWrapper_","installScriptMutatorGuards_","fnName","enforceTypeInScriptNodes_","insertAdjacentObjectPrototype","insertAdjacentTextWrapper_","installPropertySetWrappers_","constr","convertTagToConstructor","install","ShadowRoot","doc","createRange","r","createContextualFragment","f","toString","childNodes","Range","Document","HTMLDocument","DOMParser","functionBody","maybeCallDefaultPolicy_","typeName","sink","fallbackPolicy","processViolation_","context","propertyName","typeToEnforce","contextName","message","SecurityPolicyViolationEvent_","blockedURI","UrlConstructor","URL","baseURI","href","valueSlice","event","location","dispatchEvent","TrustedTypesEnforcer","config","w","attrName","requiredType","checkParent","objToCheck","parentNode","arg","nodeType","TEXT_NODE","textContent","createTextNode","fallbackValue","riskyPositions","textNode","insertBefore","isInlineEventHandler","objName","detectPolicy","currentScript","scripts","getElementsByTagName","bodyPrefix","substr","dataset","cspInMeta","head","querySelector","rootProperty","publicApi","_isPolyfill_","csp","TrustedTypeConfig$$module$src$data$trustedtypeconfig.fromCSP","trustedTypesEnforcer"],"mappings":"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","file":"trustedtypes.build.js","sourcesContent":["/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n */\n\n// TODO check attributes in safari, remove legacy safe handlers\nconst unsafeAttributeEventHandlers = [\n  'onabort',\n  'onactivate',\n  'onactivateinvisible',\n  'onafterprint',\n  'onafterupdate',\n  'onanimationcancel',\n  'onanimationend',\n  'onanimationiteration',\n  'onanimationstart',\n  'onariarequest',\n  'onauxclick',\n  'onbeforeactivate',\n  'onbeforecopy',\n  'onbeforecut',\n  'onbeforedeactivate',\n  'onbeforeeditfocus',\n  'onbeforepaste',\n  'onbeforeprint',\n  'onbeforeunload',\n  'onbegin',\n  'onblur',\n  'onbounce',\n  'oncancel',\n  'oncanplay',\n  'oncanplaythrough',\n  'oncellchange',\n  'onchange',\n  'onclick',\n  'onclose',\n  'oncommand',\n  'oncontextmenu',\n  'oncontrolselect',\n  'oncopy',\n  'oncuechange',\n  'oncut',\n  'ondataavailable',\n  'ondatasetchanged',\n  'ondatasetcomplete',\n  'ondblclick',\n  'ondeactivate',\n  'ondrag',\n  'ondragdrop',\n  'ondragend',\n  'ondragenter',\n  'ondragexit',\n  'ondragleave',\n  'ondragover',\n  'ondragstart',\n  'ondrop',\n  'ondurationchange',\n  'onemptied',\n  'onend',\n  'onended',\n  'onerror',\n  'onerrorupdate',\n  'onexit',\n  'onfilterchange',\n  'onfinish',\n  'onfocus',\n  'onfocusin',\n  'onfocusout',\n  'onformdata',\n  'onfullscreenchange',\n  'onfullscreenerror',\n  'ongotpointercapture',\n  'onhelp',\n  'oninput',\n  'oninvalid',\n  'onkeydown',\n  'onkeypress',\n  'onkeyup',\n  'onlayoutcomplete',\n  'onload',\n  'onloadeddata',\n  'onloadedmetadata',\n  'onloadend',\n  'onloadstart',\n  'onlosecapture',\n  'onlostpointercapture',\n  'onmediacomplete',\n  'onmediaerror',\n  'onmessage',\n  'onmousedown',\n  'onmouseenter',\n  'onmouseleave',\n  'onmousemove',\n  'onmouseout',\n  'onmouseover',\n  'onmouseup',\n  'onmousewheel',\n  'onmove',\n  'onmoveend',\n  'onmovestart',\n  'onmozfullscreenchange',\n  'onmozfullscreenerror',\n  'onmscontentzoom',\n  'onmsgesturechange',\n  'onmsgesturedoubletap',\n  'onmsgestureend',\n  'onmsgesturehold',\n  'onmsgesturestart',\n  'onmsgesturetap',\n  'onmsgotpointercapture',\n  'onmsinertiastart',\n  'onmslostpointercapture',\n  'onmsmanipulationstatechanged',\n  'onmspointercancel',\n  'onmspointerdown',\n  'onmspointerenter',\n  'onmspointerleave',\n  'onmspointermove',\n  'onmspointerout',\n  'onmspointerover',\n  'onmspointerup',\n  'onoffline',\n  'ononline',\n  'onoutofsync',\n  'onoverscroll',\n  'onpaste',\n  'onpause',\n  'onplay',\n  'onplaying',\n  'onpointercancel',\n  'onpointerdown',\n  'onpointerenter',\n  'onpointerleave',\n  'onpointermove',\n  'onpointerout',\n  'onpointerover',\n  'onpointerrawupdate',\n  'onpointerup',\n  'onprogress',\n  'onpropertychange',\n  'onratechange',\n  'onreadystatechange',\n  'onrepeat',\n  'onreset',\n  'onresize',\n  'onresizeend',\n  'onresizestart',\n  'onresume',\n  'onreverse',\n  'onrowdelete',\n  'onrowenter',\n  'onrowexit',\n  'onrowinserted',\n  'onscroll',\n  'onscrollend',\n  'onsearch',\n  'onseek',\n  'onseeked',\n  'onseeking',\n  'onselect',\n  'onselectionchange',\n  'onselectstart',\n  'onshow',\n  'onstalled',\n  'onstart',\n  'onstop',\n  'onstorage',\n  'onsubmit',\n  'onsuspend',\n  'onsynchrestored',\n  'ontimeerror',\n  'ontimeupdate',\n  'ontoggle',\n  'ontrackchange',\n  'ontransitioncancel',\n  'ontransitionend',\n  'ontransitionrun',\n  'ontransitionstart',\n  'onunload',\n  'onurlflip',\n  'onvolumechange',\n  'onwaiting',\n  'onwebkitanimationend',\n  'onwebkitanimationiteration',\n  'onwebkitanimationstart',\n  'onwebkitfullscreenchange',\n  'onwebkitfullscreenerror',\n  'onwebkittransitionend',\n  'onwheel',\n];\n\n/**\n * Returns an array of all event handlers. Some of the event handlers may be\n * supported only in some browsers.\n *\n * For every event type that the browser supports, SVG supports that as an event\n * attribute, following the same requirements as for HTML event attributes.\n * https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/Events\n *\n * @return {!Array<string>}\n */\nexport function getUnsafeAttributeEventHandlers() {\n  if (typeof window !== 'undefined') {\n    const eventHandlers = [];\n    for (const name in HTMLElement.prototype) {\n      if (name.slice(0, 2) === 'on') {\n        eventHandlers.push(name);\n      }\n    }\n    return eventHandlers;\n  } else {\n    return unsafeAttributeEventHandlers;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n */\n\nimport {getUnsafeAttributeEventHandlers} from './utils/eventHandlers.js';\n\nconst isBrowser = typeof window !== 'undefined';\n\nconst rejectInputFn = (s) => {\n  throw new TypeError('undefined conversion');\n};\n\nconst rejectInputDefaultPolicyFn = (s) => null;\n\nconst {toLowerCase, toUpperCase} = String.prototype;\n\nexport const HTML_NS = 'http://www.w3.org/1999/xhtml';\nexport const SVG_NS = 'http://www.w3.org/2000/svg';\n\n/**\n * @constructor\n * @property {!function(string):TrustedHTML} createHTML\n * @property {!function(string):TrustedScriptURL} createScriptURL\n * @property {!function(string):TrustedScript} createScript\n * @property {!string} name\n */\nexport const TrustedTypePolicy = function() {\n  throw new TypeError('Illegal constructor');\n};\n\n/**\n * @constructor\n */\nexport const TrustedTypePolicyFactory = function() {\n  throw new TypeError('Illegal constructor');\n};\n\n/* eslint-disable no-unused-vars */\n/**\n * @typedef {TrustedTypesInnerPolicy}\n * @property {function(string):string} createHTML\n * @property {function(string):string} createScriptURL\n * @property {function(string):string} createScript\n */\nconst TrustedTypesInnerPolicy = {};\n\n/**\n * @typedef {!Object<string, {\n *   attributes: !Object<string, string>,\n *   properties: !Object<string, string>}>}\n */\nconst TrustedTypesTypeMap = {};\n/* eslint-enable no-unused-vars */\n\nexport const DEFAULT_POLICY_NAME = 'default';\n\n\nexport const trustedTypesBuilderTestOnly = function() {\n  // Capture common names early.\n  const {\n    assign, create, defineProperty, freeze, getOwnPropertyNames,\n    getPrototypeOf, prototype: ObjectPrototype,\n  } = Object;\n\n  const {hasOwnProperty} = ObjectPrototype;\n\n  const {\n    forEach, push,\n  } = Array.prototype;\n\n  const creatorSymbol = Symbol();\n\n  /**\n   * Getter for the privateMap.\n   * @param  {Object} obj Key of the privateMap\n   * @return {Object<string, string>} Private storage.\n   */\n  const privates = function(obj) {\n    let v = privateMap.get(obj);\n    if (v === undefined) {\n      v = create(null); // initialize the private storage.\n      privateMap.set(obj, v);\n    }\n    return v;\n  };\n\n  /**\n   * Called before attacker-controlled code on an internal collections,\n   * copies prototype members onto the instance directly, so that later\n   * changes to prototypes cannot expose collection internals.\n   * @param {!T} collection\n   * @return {!T} collection\n   * @template T\n   */\n  function selfContained(collection) {\n    const proto = getPrototypeOf(collection);\n    if (proto == null || getPrototypeOf(proto) !== ObjectPrototype) {\n      throw new Error(); // Loop below is insufficient.\n    }\n    for (const key of getOwnPropertyNames(proto)) {\n      defineProperty(collection, key, {value: collection[key]});\n    }\n    return collection;\n  }\n\n  /**\n   * Map for private properties of Trusted Types object.\n   * This is so that the access to the type constructor does not give\n   * the ability to create typed values.\n   * @type {WeakMap}\n   */\n  const privateMap = selfContained(new WeakMap());\n\n  /**\n   * List of all configured policy names.\n   * @type {Array<string>}\n   */\n  const policyNames = selfContained([]);\n\n  /**\n   * Allowed policy names.\n   * Applied only if enforceNameRestrictions is true.\n   * @type {Array<string>}\n   */\n  const allowedNames = selfContained([]);\n\n  /**\n   * Should duplicate prolicy names be allowed.\n   * Applied only if enforceNameRestrictions is true.\n   * @type {boolean}\n   */\n  let allowDuplicateNames = true;\n\n  /**\n   * A reference to a default policy, if created.\n   * @type {TrustedTypePolicy}\n   */\n  let defaultPolicy = null;\n\n  /**\n   * Whether to enforce allowedNames in createPolicy().\n   * @type {boolean}\n   */\n  let enforceNameRestrictions = false;\n\n\n  /**\n   * A value that is trusted to have certain security-relevant properties\n   * because the sources of such values are controlled.\n   */\n  class TrustedType {\n    /**\n     * Constructor for TrustedType. Only allowed to be called from within a\n     * policy.\n     * @param {symbol} s creatorSymbol\n     * @param {string} policyName The name of the policy this object was\n     *   created by.\n     */\n    constructor(s, policyName) {\n      // TODO: Figure out if symbol is needed, if the value is in privateMap.\n      if (s !== creatorSymbol) {\n        throw new Error('cannot call the constructor');\n      }\n      defineProperty(this, 'policyName',\n          {value: '' + policyName, enumerable: true});\n    }\n\n    /**\n     * Returns the wrapped string value of the object.\n     * @return {string}\n     * @override\n     */\n    toString() {\n      return privates(this)['v'];\n    }\n\n    /**\n     * Returns the wrapped string value of the object.\n     * @return {string}\n     * @override\n     */\n    valueOf() {\n      return privates(this)['v'];\n    }\n  }\n\n  /**\n   * @param {function(new:TrustedType, symbol, string)} SubClass\n   * @param {string} canonName The class name which should be independent of\n   *     any renaming pass and which is relied upon by the enforcer and for\n   *     native type interop.\n   */\n  function lockdownTrustedType(SubClass, canonName) {\n    freeze(SubClass.prototype);\n    delete SubClass.name;\n    defineProperty(SubClass, 'name', {value: canonName});\n  }\n\n  /**\n   * Trusted Script URL object wrapping a string that can only be created from a\n   * TT policy.\n   */\n  class TrustedScriptURL extends TrustedType {\n  }\n  lockdownTrustedType(TrustedScriptURL, 'TrustedScriptURL');\n\n  /**\n   * Trusted HTML object wrapping a string that can only be created from a\n   * TT policy.\n   */\n  class TrustedHTML extends TrustedType {\n  }\n  lockdownTrustedType(TrustedHTML, 'TrustedHTML');\n\n  /**\n   * Trusted Script object wrapping a string that can only be created from a\n   * TT policy.\n   */\n  class TrustedScript extends TrustedType {\n  }\n  lockdownTrustedType(TrustedScript, 'TrustedScript');\n\n  lockdownTrustedType(TrustedType, 'TrustedType');\n\n  // Common constants.\n  const emptyHTML = freeze(create(new TrustedHTML(creatorSymbol, '')));\n  privates(emptyHTML)['v'] = '';\n  const emptyScript = freeze(create(new TrustedScript(creatorSymbol, '')));\n  privates(emptyScript)['v'] = '';\n\n  /**\n   * A map of attribute / property names to allowed types\n   * for known namespaces.\n   * @type {!Object<string,!TrustedTypesTypeMap>}\n   * @export\n   */\n  const TYPE_MAP = {\n    [HTML_NS]: {\n      // TODO(koto): Figure out what to to with <link>\n      'EMBED': {\n        'attributes': {\n          'src': TrustedScriptURL.name,\n        },\n      },\n      'IFRAME': {\n        'attributes': {\n          'srcdoc': TrustedHTML.name,\n        },\n      },\n      'OBJECT': {\n        'attributes': {\n          'data': TrustedScriptURL.name,\n          'codebase': TrustedScriptURL.name,\n        },\n      },\n      // TODO(koto): Figure out what to do with portals.\n      'SCRIPT': {\n        'attributes': {\n          'src': TrustedScriptURL.name,\n          'text': TrustedScript.name,\n        },\n        'properties': {\n          'innerText': TrustedScript.name,\n          'textContent': TrustedScript.name,\n          'text': TrustedScript.name,\n        },\n      },\n      '*': {\n        'attributes': {},\n        'properties': {\n          'innerHTML': TrustedHTML.name,\n          'outerHTML': TrustedHTML.name,\n        },\n      },\n    },\n    [SVG_NS]: {\n      '*': {\n        'attributes': {},\n        'properties': {},\n      },\n    },\n  };\n\n  /**\n   * A map of element property to HTML attribute names.\n   * @type {!Object<string, string>}\n   */\n  const ATTR_PROPERTY_MAP = {\n    'codebase': 'codeBase',\n    'formaction': 'formAction',\n  };\n\n  // Edge doesn't support srcdoc.\n  if (isBrowser && !('srcdoc' in HTMLIFrameElement.prototype)) {\n    delete TYPE_MAP[HTML_NS]['IFRAME']['attributes']['srcdoc'];\n  }\n\n  // in HTML, clone attributes into properties.\n  for (const tag of Object.keys(TYPE_MAP[HTML_NS])) {\n    if (!TYPE_MAP[HTML_NS][tag]['properties']) {\n      TYPE_MAP[HTML_NS][tag]['properties'] = {};\n    }\n    for (const attr of Object.keys(TYPE_MAP[HTML_NS][tag]['attributes'])) {\n      TYPE_MAP[HTML_NS][tag]['properties'][\n          ATTR_PROPERTY_MAP[attr] ? ATTR_PROPERTY_MAP[attr] : attr\n      ] = TYPE_MAP[HTML_NS][tag]['attributes'][attr];\n    }\n  }\n\n  // Add inline event handlers attribute names.\n  for (const name of getUnsafeAttributeEventHandlers()) {\n    TYPE_MAP[HTML_NS]['*']['attributes'][name] = 'TrustedScript';\n    TYPE_MAP[SVG_NS]['*']['attributes'][name] = 'TrustedScript';\n  }\n\n  /**\n   * @type {!Object<string,!Function>}\n   */\n  const createTypeMapping = {\n    'createHTML': TrustedHTML,\n    'createScriptURL': TrustedScriptURL,\n    'createScript': TrustedScript,\n  };\n\n  const createFunctionAllowed = createTypeMapping.hasOwnProperty;\n\n  /**\n   * Function generating a type checker.\n   * @template T\n   * @param  {T} type The type to check against.\n   * @return {function(*):boolean}\n   */\n  function isTrustedTypeChecker(type) {\n    return (obj) => (obj instanceof type) && privateMap.has(obj);\n  }\n\n  /**\n   * Wraps a user-defined policy rules with TT constructor\n   * @param  {string} policyName The policy name\n   * @param  {TrustedTypesInnerPolicy} innerPolicy InnerPolicy\n   * @return {!TrustedTypePolicy} Frozen policy object\n   */\n  function wrapPolicy(policyName, innerPolicy) {\n    /**\n     * @template T\n     * @param {function(new:T, symbol, string)} Ctor a trusted type constructor\n     * @param {string} methodName the policy factory method name\n     * @return {function(string):!T} a factory that produces instances of Ctor.\n     */\n    function creator(Ctor, methodName) {\n      // This causes thisValue to be null when called below.\n      const method = innerPolicy[methodName] || (\n        policyName == DEFAULT_POLICY_NAME ?\n            rejectInputDefaultPolicyFn : rejectInputFn\n      );\n      const policySpecificType = freeze(new Ctor(creatorSymbol, policyName));\n      const factory = {\n        [methodName](s, ...args) {\n          // Trick to get methodName to show in stacktrace.\n          let result = method('' + s, ...args);\n          if (result === undefined || result === null) {\n            if (policyName == DEFAULT_POLICY_NAME) {\n              // These values mean that the input was rejected. This will cause\n              // a violation later, don't create types for them.\n              return result;\n            }\n            result = '';\n          }\n          const allowedValue = '' + result;\n          const o = freeze(create(policySpecificType));\n          privates(o)['v'] = allowedValue;\n          return o;\n        },\n      }[methodName];\n      return freeze(factory);\n    }\n\n    const policy = create(TrustedTypePolicy.prototype);\n\n    for (const name of getOwnPropertyNames(createTypeMapping)) {\n      policy[name] = creator(createTypeMapping[name], name);\n    }\n    defineProperty(policy, 'name', {\n      value: policyName,\n      writable: false,\n      configurable: false,\n      enumerable: true,\n    });\n\n    return /** @type {!TrustedTypePolicy} */ (freeze(policy));\n  }\n\n  /**\n   * Returns the name of the trusted type required for a given element\n   *   attribute.\n   * @param {string} tagName The name of the tag of the element.\n   * @param {string} attribute The name of the attribute.\n   * @param {string=} elementNs Element namespace.\n   * @param {string=} attributeNs The attribute namespace.\n   * @return {string?} Required type name or null, if a Trusted\n   *   Type is not required.\n   */\n  function getAttributeType(tagName, attribute, elementNs = '',\n      attributeNs = '') {\n    const canonicalAttr = toLowerCase.apply(String(attribute));\n    return getTypeInternal_(tagName, 'attributes', canonicalAttr,\n        elementNs, attributeNs) || null;\n  }\n\n  /**\n   * Returns a type name from a type map.\n   * @param {string} tag A tag name.\n   * @param {string} container 'attributes' or 'properties'\n   * @param {string} name The attribute / property name.\n   * @param {string=} elNs Element namespace.\n   * @param {string=} attrNs Attribute namespace.\n   * @return {string|undefined}\n   * @private\n   */\n  function getTypeInternal_(tag, container, name, elNs = '', attrNs = '') {\n    const canonicalTag = toUpperCase.apply(String(tag));\n\n    let ns = attrNs ? attrNs : elNs;\n    if (!ns) {\n      ns = HTML_NS;\n    }\n    const map = hasOwnProperty.apply(TYPE_MAP, [ns]) ? TYPE_MAP[ns] : null;\n    if (!map) {\n      return;\n    }\n    if (hasOwnProperty.apply(map, [canonicalTag]) &&\n        map[canonicalTag] &&\n        hasOwnProperty.apply(map[canonicalTag][container], [name]) &&\n        map[canonicalTag][container][name]) {\n      return map[canonicalTag][container][name];\n    }\n\n    if (hasOwnProperty.apply(map, ['*']) &&\n        hasOwnProperty.apply(map['*'][container], [name]) &&\n        map['*'][container][name]) {\n      return map['*'][container][name];\n    }\n  }\n\n  /**\n   * Returns the name of the trusted type required for a given element property.\n   * @param {string} tagName The name of the tag of the element.\n   * @param {string} property The property.\n   * @param {string=} elementNs Element namespace.\n   * @return {string?} Required type name or null, if a Trusted\n   *   Type is not required.\n   */\n  function getPropertyType(tagName, property, elementNs = '') {\n    // TODO: Support namespaces.\n    return getTypeInternal_(\n        tagName, 'properties', String(property), elementNs) || null;\n  }\n\n  /**\n   * Returns the type map-like object, that resolves a name of a type for a\n   * given tag + attribute / property in a given namespace.\n   * The keys of the map are uppercase tag names. Map entry has mappings between\n   * a lowercase attribute name / case-sensitive property name and a name of the\n   * type that is required for that attribute / property.\n   * Example entry for 'IMG': {\"attributes\": {\"src\": \"TrustedHTML\"}}\n   * @param {string=} namespaceUri The namespace URI (will use the current\n   *   document namespace URI if omitted).\n   * @return {TrustedTypesTypeMap}\n   */\n  function getTypeMapping(namespaceUri = '') {\n    if (!namespaceUri) {\n      try {\n        namespaceUri = document.documentElement.namespaceURI;\n      } catch (e) {\n        namespaceUri = HTML_NS;\n      }\n    }\n    /**\n     * @template T\n     * @private\n     * @param {T} o\n     * @return {T}\n     */\n    function deepClone(o) {\n      return JSON.parse(JSON.stringify(o));\n    }\n    const map = TYPE_MAP[namespaceUri];\n    if (!map) {\n      return {};\n    }\n    return deepClone(map);\n  }\n\n  /**\n   * Creates a TT policy.\n   *\n   * Returns a frozen object representing a policy - a collection of functions\n   * that may create TT objects based on the user-provided rules specified\n   * in the policy object.\n   *\n   * @param  {string} name A unique name of the policy.\n   * @param  {TrustedTypesInnerPolicy} policy Policy rules object.\n   * @return {TrustedTypePolicy} The policy that may create TT objects\n   *   according to the policy rules.\n   */\n  function createPolicy(name, policy) {\n    const pName = '' + name; // Assert it's a string\n\n    if (!pName.match(/^[-#a-zA-Z0-9=_/@.%]+$/g)) {\n      throw new TypeError('Policy ' + pName + ' contains invalid characters.');\n    }\n\n    if (enforceNameRestrictions && allowedNames.indexOf(pName) === -1 &&\n        allowedNames.indexOf('*') === -1) {\n      throw new TypeError('Policy ' + pName + ' disallowed.');\n    }\n\n    if (pName === DEFAULT_POLICY_NAME && defaultPolicy) {\n      throw new TypeError('Policy ' + pName + ' already exists.');\n    }\n    if (enforceNameRestrictions && !allowDuplicateNames &&\n        policyNames.indexOf(pName) !== -1) {\n      throw new TypeError('Policy ' + pName + ' exists.');\n    }\n    // Register the name early so that if policy getters unwisely calls\n    // across protection domains to code that reenters this function,\n    // policy author still has rights to the name.\n    policyNames.push(pName);\n\n    // Only copy own properties of names present in createTypeMapping.\n    const innerPolicy = create(null);\n    if (policy && typeof policy === 'object') {\n      // Treat non-objects as empty policies.\n      for (const key of getOwnPropertyNames(policy)) {\n        if (createFunctionAllowed.call(createTypeMapping, key)) {\n          innerPolicy[key] = policy[key];\n        }\n      }\n    } else {\n      // eslint-disable-next-line no-console\n      console.warn('trustedTypes.createPolicy ' + pName +\n          ' was given an empty policy');\n    }\n    freeze(innerPolicy);\n\n    const wrappedPolicy = wrapPolicy(pName, innerPolicy);\n\n    if (pName === DEFAULT_POLICY_NAME) {\n      defaultPolicy = wrappedPolicy;\n    }\n\n    return wrappedPolicy;\n  }\n\n  /**\n   * Applies the policy name restrictions.\n   * @param {!Array<string>} allowedPolicyNames\n   * @param {boolean} allowDuplicates\n   */\n  function setPolicyNameRestrictions(allowedPolicyNames, allowDuplicates) {\n    enforceNameRestrictions = true;\n    allowedNames.length = 0;\n    forEach.call(allowedPolicyNames, (el) => {\n      push.call(allowedNames, '' + el);\n    });\n    allowDuplicateNames = allowDuplicates;\n    policyNames.length = 0; // Clear already used policy names list.\n  }\n\n  /**\n   * Clears the policy name restrictions.\n   */\n  function clearPolicyNameRestrictions() {\n    enforceNameRestrictions = false;\n  }\n\n  /**\n   * Returns the default policy, or null if it was not created.\n   * @return {TrustedTypePolicy}\n   */\n  function getDefaultPolicy() {\n    return defaultPolicy;\n  }\n\n  /**\n   * Resets the default policy.\n   */\n  function resetDefaultPolicy() {\n    defaultPolicy = null;\n    policyNames.splice(policyNames.indexOf(DEFAULT_POLICY_NAME), 1);\n  }\n\n  const api = create(TrustedTypePolicyFactory.prototype);\n  assign(api, {\n    // The main function to create policies.\n    createPolicy,\n\n    // Type checkers, also validating the object was initialized through a\n    // policy.\n    isHTML: isTrustedTypeChecker(TrustedHTML),\n    isScriptURL: isTrustedTypeChecker(TrustedScriptURL),\n    isScript: isTrustedTypeChecker(TrustedScript),\n\n    getAttributeType,\n    getPropertyType,\n    getTypeMapping,\n    emptyHTML,\n    emptyScript,\n    defaultPolicy, // Just to make the compiler happy, this is overridden below.\n\n    TrustedHTML: TrustedHTML,\n    TrustedScriptURL: TrustedScriptURL,\n    TrustedScript: TrustedScript,\n  });\n\n  defineProperty(api, 'defaultPolicy', {\n    get: getDefaultPolicy,\n    set: () => {},\n  });\n\n  return {\n    trustedTypes: freeze(api),\n    setPolicyNameRestrictions,\n    clearPolicyNameRestrictions,\n    getDefaultPolicy,\n    resetDefaultPolicy,\n  };\n};\n\n\nexport const {\n  trustedTypes,\n  setPolicyNameRestrictions,\n  clearPolicyNameRestrictions,\n  getDefaultPolicy,\n  resetDefaultPolicy,\n} = trustedTypesBuilderTestOnly();\n\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n */\n\n/**\n * CSP Directive name controlling Trusted Types behavior.\n * @type {string}\n */\nexport const ENFORCEMENT_DIRECTIVE_NAME = 'require-trusted-types-for';\n\nexport const POLICIES_DIRECTIVE_NAME = 'trusted-types';\n\n/**\n * A configuration object for trusted type enforcement.\n */\nexport class TrustedTypeConfig {\n  /**\n   * @param {boolean} isLoggingEnabled If true enforcement wrappers will log\n   *   violations to the console.\n   * @param {boolean} isEnforcementEnabled If true enforcement is enabled at\n   *   runtime.\n   * @param {Array<string>} allowedPolicyNames Whitelisted policy names.\n   * @param {boolean} allowDuplicates Should duplicate names be allowed.\n   * @param {?string} cspString String with the CSP policy.\n   */\n  constructor(isLoggingEnabled,\n      isEnforcementEnabled,\n      allowedPolicyNames,\n      allowDuplicates,\n      cspString = null) {\n    /**\n      * True if logging is enabled.\n      * @type {boolean}\n      */\n    this.isLoggingEnabled = isLoggingEnabled;\n\n    /**\n      * True if enforcement is enabled.\n      * @type {boolean}\n      */\n    this.isEnforcementEnabled = isEnforcementEnabled;\n\n    /**\n     * Allowed policy names.\n     * @type {Array<string>}\n     */\n    this.allowedPolicyNames = allowedPolicyNames;\n\n    /**\n     * Should duplicate names be accepted.\n     * @type {boolean}\n     */\n    this.allowDuplicates = allowDuplicates;\n\n    /**\n     * CSP string that defined the policy.\n     * @type {?string}\n     */\n    this.cspString = cspString;\n  }\n\n  /**\n   * Parses a CSP policy.\n   * @link https://www.w3.org/TR/CSP3/#parse-serialized-policy\n   * @param  {string} cspString String with a CSP definition.\n   * @return {Object<string,Array<string>>} Parsed CSP, keyed by directive\n   *   names.\n   */\n  static parseCSP(cspString) {\n    const SEMICOLON = /\\s*;\\s*/;\n    const WHITESPACE = /\\s+/;\n    return cspString.trim().split(SEMICOLON)\n        .map((serializedDirective) => serializedDirective.split(WHITESPACE))\n        .reduce(function(parsed, directive) {\n          if (directive[0]) {\n            parsed[directive[0]] = directive.slice(1).map((s) => s).sort();\n          }\n          return parsed;\n        }, {});\n  }\n\n  /**\n   * Creates a TrustedTypeConfig object from a CSP string.\n   * @param  {string} cspString\n   * @return {!TrustedTypeConfig}\n   */\n  static fromCSP(cspString) {\n    const isLoggingEnabled = true;\n    const policy = TrustedTypeConfig.parseCSP(cspString);\n    const enforce = ENFORCEMENT_DIRECTIVE_NAME in policy &&\n        policy[ENFORCEMENT_DIRECTIVE_NAME].includes('\\'script\\'');\n    let policies = ['*'];\n    let allowDuplicates = true;\n    if (POLICIES_DIRECTIVE_NAME in policy) {\n      policies = policy[POLICIES_DIRECTIVE_NAME].filter(\n          (p) => p.charAt(0) !== '\\'');\n      allowDuplicates = policy[POLICIES_DIRECTIVE_NAME].includes(\n          '\\'allow-duplicates\\'');\n      if (policy[POLICIES_DIRECTIVE_NAME].length == 1 &&\n          policy[POLICIES_DIRECTIVE_NAME][0] == '\\'none\\'') {\n        policies = [];\n      }\n    }\n    return new TrustedTypeConfig(\n        isLoggingEnabled,\n        enforce, /* isEnforcementEnabled */\n        policies, /* allowedPolicyNames */\n        allowDuplicates, /* allowDuplicates */\n        cspString\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n */\n\nconst {\n  defineProperty,\n} = Object;\n\n/**\n * Installs the setter of a given property.\n * @param {!Object} object An object for which to wrap the property.\n * @param {string} name The name of the property to wrap.\n * @param {function(*): *|undefined} setter A setter function}\n */\nexport function installSetter(object, name, setter) {\n  const descriptor = {\n    set: setter,\n  };\n  defineProperty(object, name, descriptor);\n}\n\n/**\n * Installs a setter and getter of a given property.\n * @param {!Object} object An object for which to wrap the property.\n * @param {string} name The name of the property to wrap.\n * @param {function(*): *|undefined} setter A setter function}\n * @param {function(*): *|undefined} getter A getter function}\n */\nexport function installSetterAndGetter(object, name, setter, getter) {\n  const descriptor = {\n    set: setter,\n    get: getter,\n    configurable: true, // This can get uninstalled, we need configurable: true\n  };\n  defineProperty(object, name, descriptor);\n}\n\n/**\n * Installs the setter of a given property.\n * @param {!Object} object An object for which to wrap the property.\n * @param {string} name The name of the property to wrap.\n * @param {function(*): *|undefined} fn A function}\n */\nexport function installFunction(object, name, fn) {\n  defineProperty(object, name, {\n    value: fn,\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n */\n\n// TrustedTypeConfig is used only as jsdoc type\n// eslint-disable-next-line\nimport {ENFORCEMENT_DIRECTIVE_NAME, TrustedTypeConfig}\n  from './data/trustedtypeconfig.js';\nimport {\n  trustedTypes as TrustedTypes,\n  setPolicyNameRestrictions,\n  clearPolicyNameRestrictions,\n  resetDefaultPolicy,\n  HTML_NS,\n} from\n  './trustedtypes.js';\n\nimport {installFunction, installSetter, installSetterAndGetter}\n  from './utils/wrapper.js';\n\nconst {apply} = Reflect;\nconst {\n  getOwnPropertyNames,\n  getOwnPropertyDescriptor,\n  getPrototypeOf,\n} = Object;\n\nconst {\n  hasOwnProperty,\n  isPrototypeOf,\n} = Object.prototype;\n\nconst {slice} = String.prototype;\n\nlet stringifyForRangeHack;\n\n/**\n * Parses URL, catching all the errors.\n * @param  {string} url URL string to parse.\n * @param  {Window} windowObject the window object.\n * @return {URL|null}\n */\nfunction parseUrl_(url, windowObject) {\n  // No URL in IE 11.\n  const UrlConstructor = windowObject && typeof windowObject.URL == 'function' ?\n    windowObject.URL.prototype.constructor : null;\n\n  try {\n    return new UrlConstructor(url, windowObject.document.baseURI || undefined);\n  } catch (e) {\n    return null;\n  }\n}\n\n// We don't actually need other namespaces.\n// setAttribute is hooked on Element.prototype, which all elements inherit from,\n// and all sensitive property wrappers are hooked directly on Element as well.\nconst typeMap = TrustedTypes.getTypeMapping(HTML_NS);\n\nconst STRING_TO_TYPE = {\n  'TrustedHTML': TrustedTypes.TrustedHTML,\n  'TrustedScript': TrustedTypes.TrustedScript,\n  'TrustedScriptURL': TrustedTypes.TrustedScriptURL,\n};\n\nfor (const tagName of Object.keys(typeMap)) {\n  const attrs = typeMap[tagName]['properties'];\n  for (const [k, v] of Object.entries(attrs)) {\n    attrs[k] = STRING_TO_TYPE[v];\n  }\n}\n\n/**\n * Map of type names to type checking function.\n * @type {!Object<string,!Function>}\n */\nconst TYPE_CHECKER_MAP = {\n  'TrustedHTML': TrustedTypes.isHTML,\n  'TrustedScriptURL': TrustedTypes.isScriptURL,\n  'TrustedScript': TrustedTypes.isScript,\n};\n\n/**\n * Map of type names to type producing function.\n * @type {Object<string,string>}\n */\nconst TYPE_PRODUCER_MAP = {\n  'TrustedHTML': 'createHTML',\n  'TrustedScriptURL': 'createScriptURL',\n  'TrustedScript': 'createScript',\n};\n\n/* eslint-disable no-unused-vars */\n/**\n * @typedef {TrustedTypePolicy}\n * @property {function(string):TrustedHTML} createHTML\n * @property {function(string):TrustedScriptURL} createScriptURL\n * @property {function(string):TrustedScript} createScript\n */\nconst TrustedTypePolicy = {};\n/* eslint-enable no-unused-vars */\n\n\n/**\n * An object for enabling trusted type enforcement.\n */\nexport class TrustedTypesEnforcer {\n  /**\n   * @param {!TrustedTypeConfig} config The configuration for\n   * @param {!Window=} windowObject object to monkey patch\n   */\n  constructor(config, windowObject) {\n    /**\n     * A configuration for the trusted type enforcement.\n     * @private {!TrustedTypeConfig}\n     */\n    this.config_ = config;\n    /**\n     * @private {Object<string, function(*): *|undefined>}\n     */\n    this.originalSetters_ = {};\n    /**\n     * The object that will be monkey patched by the polyfill.\n     * @private {Window}\n     */\n    this.windowObject = windowObject ||\n      (typeof window !== 'undefined' ? window : null);\n\n    if (!this.windowObject || typeof this.windowObject !== 'object') {\n      throw new Error(\n          // eslint-disable-next-line\n          'The polyfill expects a global `window` object or emulated `window-like` object passed to the enforcer as second argument'\n      );\n    }\n\n    // In IE 11, insertAdjacent(HTML|Text) is on HTMLElement prototype\n    this.insertAdjacentObjectPrototype = ((w) => {\n      if (!w.Element || !w.HTMLElement) return null;\n      return apply(hasOwnProperty, w.Element.prototype,\n          ['insertAdjacentHTML']) ?\n          w.Element.prototype :\n            w.HTMLElement.prototype;\n    })(this.windowObject);\n  }\n\n  /**\n     * Checks whether the value is instanceOf the specific window object.\n     * @param {*} value\n     * @param {!string} winProp\n     * @return {!boolean}\n     * @private\n     */\n  instanceOfDomProperty(value, winProp) {\n    const obj = this.windowObject[winProp];\n\n    return value instanceof obj;\n  }\n\n  /**\n * Converts an uppercase tag name to an element constructor function name.\n * Used for property setter hijacking only.\n * @param {string} tagName\n * @return {string|null}\n */\n  convertTagToConstructor(tagName) {\n    if (tagName == '*') {\n      return 'HTMLElement';\n    } else if (!this.windowObject.document) {\n      return null;\n    } else {\n      return this.getConstructorName_(\n          this.windowObject.document.createElement(tagName).constructor\n      );\n    }\n  }\n\n  /**\n * Return object constructor name\n * (their function.name is not available in IE 11).\n * @param {Function} fn\n * @return {string|null}\n * @private\n */\n  getConstructorName_(fn) {\n    if (!this.windowObject.document) return null;\n    return this.windowObject.document.createElement('div').constructor.name ?\n      fn.name :\n      ('' + fn).match(/^\\[object (\\S+)\\]$/)[1];\n  }\n\n  /**\n   * Wraps HTML sinks with an enforcement setter, which will enforce\n   * trusted types and do logging, if enabled.\n   *\n   */\n  install() {\n    setPolicyNameRestrictions(this.config_.allowedPolicyNames,\n        this.config_.allowDuplicates);\n\n    if (!this.config_.isEnforcementEnabled && !this.config_.isLoggingEnabled) {\n      return;\n    }\n\n    if ('ShadowRoot' in this.windowObject) {\n      this.wrapSetter_(this.windowObject.ShadowRoot.prototype, 'innerHTML',\n          TrustedTypes.TrustedHTML);\n    }\n    stringifyForRangeHack = (function(doc) {\n      if (!doc || !doc.createRange) return false;\n      const r = doc.createRange();\n      // In IE 11 Range.createContextualFragment doesn't stringify its argument.\n      const f = r.createContextualFragment(/** @type {string} */ (\n        {toString: () => '<div></div>'}));\n      return f.childNodes.length == 0;\n    })(this.windowObject.document);\n\n    if (this.windowObject.Range) {\n      this.wrapWithEnforceFunction_(\n          this.windowObject.Range.prototype,\n          'createContextualFragment',\n          TrustedTypes.TrustedHTML, 0);\n    }\n\n    this.wrapWithEnforceFunction_(this.insertAdjacentObjectPrototype,\n        'insertAdjacentHTML',\n        TrustedTypes.TrustedHTML, 1);\n\n    if (this.windowObject.Document && getOwnPropertyDescriptor(\n        this.windowObject.Document.prototype, 'write'\n    )) {\n      // Chrome\n      this.wrapWithEnforceFunction_(this.windowObject.Document.prototype,\n          'write',\n          TrustedTypes.TrustedHTML, 0);\n    } else if (this.windowObject.HTMLDocument && getOwnPropertyDescriptor(\n        this.windowObject.HTMLDocument.prototype, 'write')) {\n      // Firefox\n      this.wrapWithEnforceFunction_(this.windowObject.HTMLDocument.prototype,\n          'write',\n          TrustedTypes.TrustedHTML, 0);\n    }\n\n    if ('DOMParser' in this.windowObject) {\n      this.wrapWithEnforceFunction_(\n          this.windowObject.DOMParser.prototype,\n          'parseFromString',\n          TrustedTypes.TrustedHTML, 0);\n    }\n\n    this.wrapWithEnforceFunction_(this.windowObject, 'setInterval',\n        TrustedTypes.TrustedScript, 0);\n    this.wrapWithEnforceFunction_(this.windowObject, 'setTimeout',\n        TrustedTypes.TrustedScript, 0);\n    this.wrapSetAttribute_();\n    this.installScriptMutatorGuards_();\n    this.installPropertySetWrappers_();\n  }\n\n  /**\n   * Removes the original setters.\n   */\n  uninstall() {\n    clearPolicyNameRestrictions();\n\n    if (!this.config_.isEnforcementEnabled && !this.config_.isLoggingEnabled) {\n      return;\n    }\n\n    if ('ShadowRoot' in this.windowObject) {\n      this.restoreSetter_(this.windowObject.ShadowRoot.prototype, 'innerHTML');\n    }\n\n    if (this.windowObject.Range) {\n      this.restoreFunction_(\n          this.windowObject.Range.prototype,\n          'createContextualFragment'\n      );\n    }\n    this.restoreFunction_(\n        this.insertAdjacentObjectPrototype,\n        'insertAdjacentHTML'\n    );\n    if (this.windowObject.Element) {\n      this.restoreFunction_(\n          this.windowObject.Element.prototype, 'setAttribute');\n      this.restoreFunction_(\n          this.windowObject.Element.prototype, 'setAttributeNS');\n    }\n\n    if (this.windowObject.Document &&\n      getOwnPropertyDescriptor(\n          this.windowObject.Document.prototype, 'write')\n    ) {\n      this.restoreFunction_(this.windowObject.Document.prototype, 'write');\n    } else if (this.windowObject.HTMLDocument &&\n      getOwnPropertyDescriptor(this.windowObject.HTMLDocument, 'write')\n    ) {\n      this.restoreFunction_(HTMLDocument.prototype, 'write');\n    }\n\n    if ('DOMParser' in this.windowObject) {\n      this.restoreFunction_(DOMParser.prototype, 'parseFromString');\n    }\n    this.restoreFunction_(this.windowObject, 'setTimeout');\n    this.restoreFunction_(this.windowObject, 'setInterval');\n    this.uninstallPropertySetWrappers_();\n    this.uninstallScriptMutatorGuards_();\n    resetDefaultPolicy();\n  }\n\n  /**\n   * Installs type-enforcing wrappers for APIs that allow to modify\n   * script element texts.\n   * @private\n   */\n  installScriptMutatorGuards_() {\n    const that = this;\n\n    ['appendChild', 'insertBefore', 'replaceChild'].forEach((fnName) => {\n      if (this.windowObject.Node) {\n        this.wrapFunction_(\n            this.windowObject.Node.prototype,\n            fnName,\n            /**\n           * @this {Node}\n           * @param {function(!Function, ...*)} originalFn\n           * @return {*}\n           */\n            function(originalFn, ...args) {\n              return that.enforceTypeInScriptNodes_\n                  .bind(that, this, /* checkParent */ false, originalFn)\n                  .apply(that, args);\n            });\n      }\n    });\n    this.wrapFunction_(\n        this.insertAdjacentObjectPrototype,\n        'insertAdjacentText',\n        /**\n         * @this {Element}\n         * @param {function(!Function, ...*)} originalFn\n         * @return {*}\n         */\n        function(originalFn, ...args) {\n          return that.insertAdjacentTextWrapper_\n              .bind(that, this, originalFn)\n              .apply(that, args);\n        });\n\n    if (this.windowObject.Element &&\n      'after' in this.windowObject.Element.prototype) {\n      ['after', 'before', 'replaceWith'].forEach((fnName) => {\n        this.wrapFunction_(\n            this.windowObject.Element.prototype,\n            fnName,\n            /**\n             * @this {Element}\n             * @param {function(!Function, ...*)} originalFn\n             * @return {*}\n             */\n            function(originalFn, ...args) {\n              return that.enforceTypeInScriptNodes_\n                  .bind(that, this, /* checkParent */ true, originalFn)\n                  .apply(that, args);\n            });\n      });\n      ['append', 'prepend'].forEach((fnName) => {\n        this.wrapFunction_(\n            this.windowObject.Element.prototype,\n            fnName,\n            /**\n           * @this {Element}\n           * @param {function(!Function, ...*)} originalFn\n           * @return {*}\n           */\n            function(originalFn, ...args) {\n              return that.enforceTypeInScriptNodes_\n                  .bind(that, this, /* checkParent */ false, originalFn)\n                  .apply(that, args);\n            });\n      });\n    }\n  }\n\n  /**\n   * Uninstalls type-enforcing wrappers for APIs that allow to modify\n   * script element texts.\n   * @private\n   */\n  uninstallScriptMutatorGuards_() {\n    if (this.windowObject.Node) {\n      this.restoreFunction_(\n          this.windowObject.Node.prototype, 'appendChild');\n      this.restoreFunction_(\n          this.windowObject.Node.prototype, 'insertBefore');\n      this.restoreFunction_(\n          this.windowObject.Node.prototype, 'replaceChild');\n    }\n    this.restoreFunction_(\n        this.insertAdjacentObjectPrototype, 'insertAdjacentText');\n    if (this.windowObject.Element &&\n       'after' in this.windowObject.Element.prototype) {\n      ['after', 'before', 'replaceWith', 'append', 'prepend'].forEach(\n          (fnName) => this.restoreFunction_(\n              this.windowObject.Element.prototype, fnName));\n    }\n  }\n\n  /**\n   * Installs wrappers for directly setting properties\n   * based on the type map.\n   * @private\n   */\n  installPropertySetWrappers_() {\n    /* eslint-disable guard-for-in */\n    for (const tag of getOwnPropertyNames(typeMap)) {\n      for (const property of getOwnPropertyNames(typeMap[tag]['properties'])) {\n        const constr = this.convertTagToConstructor(tag);\n        if (constr != null && this.windowObject[constr]) {\n          this.wrapSetter_(\n              this.windowObject[constr].prototype,\n              property,\n              typeMap[tag]['properties'][property]);\n        }\n      }\n    }\n  }\n\n  /**\n   * Uninstalls wrappers for directly setting properties\n   * based on the type map.\n   * @private\n   */\n  uninstallPropertySetWrappers_() {\n    /* eslint-disable guard-for-in */\n    for (const tag of getOwnPropertyNames(typeMap)) {\n      for (const property of getOwnPropertyNames(typeMap[tag]['properties'])) {\n        const constr = this.convertTagToConstructor(tag);\n        if (constr != null && this.windowObject[constr]) {\n          this.restoreSetter_(\n              this.windowObject[constr].prototype,\n              property);\n        }\n      }\n    }\n  }\n\n  /** Wraps set attribute with an enforcement function. */\n  wrapSetAttribute_() {\n    const that = this;\n    if (this.windowObject.Element) {\n      this.wrapFunction_(\n          this.windowObject.Element.prototype,\n          'setAttribute',\n          /**\n           * @this {TrustedTypesEnforcer}\n           * @param {function(!Function, ...*)} originalFn\n           * @return {*}\n           */\n          function(originalFn, ...args) {\n            return that.setAttributeWrapper_\n                .bind(that, this, originalFn)\n                .apply(that, args);\n          });\n      this.wrapFunction_(\n          this.windowObject.Element.prototype,\n          'setAttributeNS',\n          /**\n           * @this {TrustedTypesEnforcer}\n           * @param {function(!Function, ...*)} originalFn\n           * @return {*}\n           */\n          function(originalFn, ...args) {\n            return that.setAttributeNSWrapper_\n                .bind(that, this, originalFn)\n                .apply(that, args);\n          });\n    }\n  }\n\n  /**\n   * Enforces type checking for Element.prototype.setAttribute.\n   * @param {!Object} context The context for the call to the original function.\n   * @param {!Function} originalFn The original setAttribute function.\n   * @return {*}\n   */\n  setAttributeWrapper_(context, originalFn, ...args) {\n    // Note(slekies): In a normal application constructor should never be null.\n    // However, there are no guarantees. If the constructor is null, we cannot\n    // determine whether a special type is required. In order to not break the\n    // application, we will not do any further type checks and pass the call\n    // to setAttribute.\n    if (context.constructor !== null &&\n      this.instanceOfDomProperty(context, 'Element')) {\n      const attrName = (args[0] = String(args[0])).toLowerCase();\n      const requiredType = TrustedTypes.getAttributeType(context['tagName'],\n          attrName, context['namespaceURI']);\n      if (requiredType && apply(hasOwnProperty, STRING_TO_TYPE,\n          [requiredType])) {\n        return this.enforce_(\n            context, 'setAttribute', STRING_TO_TYPE[requiredType],\n            originalFn, 1, args);\n      }\n    }\n    return apply(originalFn, context, args);\n  }\n\n  /**\n   * Enforces type checking for Element.prototype.setAttributeNS.\n   * @param {!Object} context The context for the call to the original function.\n   * @param {!Function} originalFn The original setAttributeNS function.\n   * @return {*}\n   */\n  setAttributeNSWrapper_(context, originalFn, ...args) {\n    // See the note from setAttributeWrapper_ above.\n    if (context.constructor !== null &&\n      this.instanceOfDomProperty(context, 'Element')) {\n      const ns = args[0] ? String(args[0]) : null;\n      args[0] = ns;\n      const attrName = (args[1] = String(args[1])).toLowerCase();\n      const requiredType = TrustedTypes.getAttributeType(context['tagName'],\n          attrName, context['namespaceURI'], ns);\n      if (requiredType && apply(hasOwnProperty, STRING_TO_TYPE,\n          [requiredType])) {\n        return this.enforce_(context, 'setAttributeNS',\n            STRING_TO_TYPE[requiredType],\n            originalFn, 2, args);\n      }\n    }\n    return apply(originalFn, context, args);\n  }\n\n  /**\n   * Wrapper for DOM mutator functions that enforces type checks if the context\n   * (or, optionally, its parent node) is a script node.\n   * For each argument, it will make sure that text nodes pass through a\n   * default policy, or generate a violation. To skip that check, pass\n   * TrustedScript objects instead.\n   * @param {!Element|!Node} context The context for the call to the original\n   * function.\n   * @param {boolean} checkParent Check parent of context instead.\n   * @param {!Function} originalFn The original mutator function.\n   * @return {*}\n   */\n  enforceTypeInScriptNodes_(context, checkParent, originalFn, ...args) {\n    if (!this.windowObject.Node || !this.windowObject.document) return;\n\n    const objToCheck = checkParent ? context.parentNode : context;\n    if (this.instanceOfDomProperty(objToCheck, 'HTMLScriptElement') &&\n    args.length > 0) {\n      for (let argNumber = 0; argNumber < args.length; argNumber++) {\n        let arg = args[argNumber];\n        if (this.instanceOfDomProperty(arg, 'Node') &&\n         arg.nodeType !== this.windowObject.Node.TEXT_NODE) {\n          continue; // Type is not interesting\n        }\n        if (this.instanceOfDomProperty(arg, 'Node') &&\n         arg.nodeType == this.windowObject.Node.TEXT_NODE) {\n          arg = arg.textContent;\n        } else if (TrustedTypes.isScript(arg)) {\n          // TODO(koto): Consider removing this branch, as it's hard to spec.\n          // Convert to text node and go on.\n          args[argNumber] =\n          this.windowObject.document.createTextNode('' + arg);\n          continue;\n        }\n\n        // Try to run a default policy on argsthe argument\n        const fallbackValue = this.maybeCallDefaultPolicy_(\n            'TrustedScript', '' + arg, 'script.text');\n        if (fallbackValue === null || fallbackValue === undefined) {\n          this.processViolation_(context, originalFn.name,\n              TrustedTypes.TrustedScript, arg);\n        } else {\n          arg = fallbackValue;\n        }\n        args[argNumber] =\n        this.windowObject.document.createTextNode('' + arg);\n      }\n    }\n    return apply(originalFn, context, args);\n  }\n\n  /**\n   * Wrapper for Element.insertAdjacentText that enforces type checks for\n   * inserting text into a script node.\n   * @param {!Object} context The context for the call to the original function.\n   * @param {!Function} originalFn The original insertAdjacentText function.\n   */\n  insertAdjacentTextWrapper_(context, originalFn, ...args) {\n    const riskyPositions = ['beforebegin', 'afterend'];\n    if (this.windowObject.document && this.windowObject.Node &&\n       this.instanceOfDomProperty(context, 'Element') &&\n        this.instanceOfDomProperty(\n            context['parentElement'], 'HTMLScriptElement'\n        ) &&\n        args.length > 1 &&\n        riskyPositions.includes(args[0]) &&\n        !(TrustedTypes.isScript(args[1]))) {\n      // Run a default policy on args[1]\n      args[1] = '' + args[1];\n      const fallbackValue = this.maybeCallDefaultPolicy_('TrustedScript',\n          args[1], 'script.text');\n      if (fallbackValue === null || fallbackValue === undefined) {\n        this.processViolation_(context, 'insertAdjacentText',\n            TrustedTypes.TrustedScript, args[1]);\n      } else {\n        args[1] = fallbackValue;\n      }\n\n      const textNode = this.windowObject.document.createTextNode('' + args[1]);\n\n      const insertBefore = /** @type function(this: Node) */(\n        this.originalSetters_[this.getKey_(\n            this.windowObject.Node.prototype, 'insertBefore'\n        )]);\n\n      switch (args[0]) {\n        case riskyPositions[0]: // 'beforebegin'\n          apply(insertBefore, context['parentElement'],\n              [textNode, context]);\n          break;\n        case riskyPositions[1]: // 'afterend'\n          apply(insertBefore, context['parentElement'],\n              [textNode, context['nextSibling']]);\n          break;\n      }\n      return;\n    }\n    apply(originalFn, context, args);\n  }\n\n  /**\n   * Wraps a setter with the enforcement wrapper.\n   * @param {Object} object The object of the to-be-wrapped property.\n   * @param {string} name The name of the property.\n   * @param {!Function} type The type to enforce.\n   * @param {number} argNumber Number of the argument to enforce the type of.\n   * @private\n   */\n  wrapWithEnforceFunction_(object, name, type, argNumber) {\n    if (!object) return;\n    const that = this;\n    this.wrapFunction_(\n        object,\n        name,\n        /**\n         * @this {TrustedTypesEnforcer}\n         * @param {function(!Function, ...*)} originalFn\n         * @return {*}\n         */\n        function(originalFn, ...args) {\n          return that.enforce_.call(that, this, name, type, originalFn,\n              argNumber, args);\n        });\n  }\n\n\n  /**\n   * Wraps an existing function with a given function body and stores the\n   * original function.\n   * @param {!Object} object The object of the to-be-wrapped property.\n   * @param {string} name The name of the property.\n   * @param {function(!Function, ...*)} functionBody The wrapper function.\n   */\n  wrapFunction_(object, name, functionBody) {\n    if (!object) return;\n    const descriptor = getOwnPropertyDescriptor(object, name);\n    const originalFn = /** @type function(*):* */ (\n        descriptor ? descriptor.value : null);\n\n    if (!(originalFn instanceof Function)) {\n      if (this.config_.isLoggingEnabled) {\n        // eslint-disable-next-line no-console\n        console.warn(\n            'Property ' + name + ' on object' + object + ' is not a function');\n      }\n      return;\n    }\n\n    const key = this.getKey_(object, name);\n    if (this.originalSetters_[key]) {\n      throw new Error(\n          `TrustedTypesEnforcer: Double installation detected: ${key} ${name}`);\n    }\n    installFunction(\n        object,\n        name,\n        /**\n         * @this {TrustedTypesEnforcer}\n         * @return {*}\n         */\n        function(...args) {\n          return functionBody.bind(this, originalFn).apply(this, args);\n        });\n    this.originalSetters_[key] = originalFn;\n  }\n\n  /**\n   * Wraps a setter with the enforcement wrapper.\n   * @param {!Object} object The object of the to-be-wrapped property.\n   * @param {string} name The name of the property.\n   * @param {!Function} type The type to enforce.\n   * @param {!Object=} descriptorObject If present, will reuse the\n   *   setter/getter from this one, instead of object. Used for redefining\n   *   setters in subclasses.\n   * @private\n   */\n  wrapSetter_(object, name, type, descriptorObject = undefined) {\n    if (!this.windowObject.Node) return;\n    if (descriptorObject &&!isPrototypeOf.call(descriptorObject, object)) {\n      throw new Error('Invalid prototype chain');\n    }\n\n    let useObject = descriptorObject || object;\n    let descriptor;\n    let originalSetter;\n    const stopAt = getPrototypeOf(this.windowObject.Node.prototype);\n\n    do {\n      descriptor = getOwnPropertyDescriptor(useObject, name);\n      originalSetter = /** @type {function(*):*} */ (descriptor ?\n          descriptor.set : null);\n      if (!originalSetter) {\n        useObject = getPrototypeOf(useObject) || stopAt;\n      }\n    } while (!(originalSetter || useObject === stopAt || !useObject));\n\n    // if there is no setter warn and return\n    // (some setters might not be available in certain environments, e.g. node)\n    if (!(originalSetter instanceof Function)) {\n      if (this.config_.isLoggingEnabled) {\n      // eslint-disable-next-line no-console\n        console.warn(\n            'No setter for property ' + name + ' on object' + object);\n      }\n      return;\n    }\n\n    const key = this.getKey_(object, name);\n    if (this.originalSetters_[key]) {\n      throw new Error(\n          `TrustedTypesEnforcer: Double installation detected: ${key} ${name}`);\n    }\n    const that = this;\n    /**\n     * @this {TrustedTypesEnforcer}\n     * @param {*} value\n     */\n    const enforcingSetter = function(value) {\n      that.enforce_.call(that, this, name, type, originalSetter, 0,\n          [value]);\n    };\n\n    if (useObject === object) {\n      installSetter(\n          object,\n          name,\n          enforcingSetter);\n    } else {\n      // Since we're creating a new setter in subclass, we also need to\n      // overwrite the getter.\n      installSetterAndGetter(\n          object,\n          name,\n          enforcingSetter,\n          descriptor.get\n      );\n    }\n    this.originalSetters_[key] = originalSetter;\n  }\n\n  /**\n   * Restores the original setter for the property, as encountered during\n   * install().\n   * @param {!Object} object The object of the to-be-wrapped property.\n   * @param {string} name The name of the property.\n   * @param {!Object=} descriptorObject If present, will restore the original\n   *   setter/getter from this one, instead of object.\n   * @private\n   */\n  restoreSetter_(object, name, descriptorObject = undefined) {\n    if (!this.windowObject.Node) return;\n    if (descriptorObject &&\n      !isPrototypeOf.call(descriptorObject, object)) {\n      throw new Error('Invalid prototype chain');\n    }\n\n    let useObject = descriptorObject || object;\n    let descriptor;\n    let originalSetter;\n    const stopAt = getPrototypeOf(this.windowObject.Node.prototype);\n\n    do {\n      descriptor = getOwnPropertyDescriptor(useObject, name);\n      originalSetter = /** @type {function(*):*} */ (descriptor ?\n          descriptor.set : null);\n      if (!originalSetter) {\n        useObject = getPrototypeOf(useObject) || stopAt;\n      }\n    } while (!(originalSetter || useObject === stopAt || !useObject));\n\n    // if there is no setter warn and return\n    // (some setters might not be available in certain environments, e.g. node)\n    if (!(originalSetter instanceof Function)) {\n      if (this.config_.isLoggingEnabled) {\n      // eslint-disable-next-line no-console\n        console.warn(\n            'No setter for property ' + name + ' on object' + object);\n      }\n      return;\n    }\n\n    const key = this.getKey_(object, name);\n    if (!this.originalSetters_[key]) {\n      throw new Error(\n          // eslint-disable-next-line max-len\n          `TrustedTypesEnforcer: Cannot restore (double uninstallation?): ${key} ${name}`\n      );\n    }\n    if (descriptorObject) {\n      // We have to also overwrite a getter.\n      installSetterAndGetter(object, name, this.originalSetters_[key],\n          getOwnPropertyDescriptor(descriptorObject, name).get);\n    } else {\n      installSetter(object, name, this.originalSetters_[key]);\n    }\n    delete this.originalSetters_[key];\n  }\n\n  /**\n   * Restores the original method of an object, as encountered during install().\n   * @param {Object} object The object of the to-be-wrapped property.\n   * @param {string} name The name of the property.\n   * @private\n   */\n  restoreFunction_(object, name) {\n    if (!object) return;\n    const descriptor = getOwnPropertyDescriptor(object, name);\n    const originalFn = /** @type function(*):* */ (\n        descriptor ? descriptor.value : null);\n\n    if (!(originalFn instanceof Function)) {\n      if (this.config_.isLoggingEnabled) {\n        // eslint-disable-next-line no-console\n        console.warn(\n            'Property ' + name + ' on object' + object + ' is not a function');\n      }\n      return;\n    }\n\n    const key = this.getKey_(object, name);\n    if (!this.originalSetters_[key]) {\n      throw new Error(\n          // eslint-disable-next-line max-len\n          `TrustedTypesEnforcer: Cannot restore (double uninstallation?): ${key} ${name}`\n      );\n    }\n    installFunction(object, name, this.originalSetters_[key]);\n    delete this.originalSetters_[key];\n  }\n\n  /**\n   * Returns the key name for caching original setters.\n   * @param {!Object} object The object of the to-be-wrapped property.\n   * @param {string} name The name of the property.\n   * @return {string} Key name.\n   * @private\n   */\n  getKey_(object, name) {\n    // TODO(msamuel): Can we use Object.prototype.toString.call(object)\n    // to get an unspoofable string here?\n    // TODO(msamuel): fail on '-' in object.constructor.name?\n    // No Function.name in IE 11\n    const ctrName = '' + (\n      object.constructor.name ?\n      object.constructor.name :\n      object.constructor);\n    return ctrName + '-' + name;\n  }\n\n  /**\n   * Calls a default policy.\n   * @param {string} typeName Type name to attempt to produce from a value.\n   * @param {*} value The value to pass to a default policy\n   * @param {string} sink The sink name that the default policy will be called\n   *   with.\n   * @throws {Error} If the default policy throws, or not exist.\n   * @return {Function?} The trusted value or null, if the input value shoudl\n   *   be rejected.\n   */\n  maybeCallDefaultPolicy_(typeName, value, sink = '') {\n    // Apply a fallback policy, if it exists.\n    const fallbackPolicy = TrustedTypes['defaultPolicy'];\n    if (!fallbackPolicy) {\n      return null;\n    }\n    if (!TYPE_CHECKER_MAP.hasOwnProperty(typeName)) {\n      return null;\n    }\n    return fallbackPolicy[TYPE_PRODUCER_MAP[typeName]](value, '' + sink);\n  }\n\n  /**\n   * Logs and enforces TrustedTypes depending on the given configuration.\n   * @template T\n   * @param {!Object} context The object that the setter is called for.\n   * @param {string} propertyName The name of the property.\n   * @param {!Function} typeToEnforce The type to enforce.\n   * @param {function(?):T} originalSetter Original setter.\n   * @param {number} argNumber Number of argument to enforce the type of.\n   * @param {Array} args Arguments.\n   * @return {T}\n   * @private\n   */\n  enforce_(context, propertyName, typeToEnforce, originalSetter, argNumber,\n      args) {\n    const value = args[argNumber];\n    const typeName = '' + typeToEnforce.name;\n    // If typed value is given, pass through.\n    if (TYPE_CHECKER_MAP.hasOwnProperty(typeName) &&\n        TYPE_CHECKER_MAP[typeName](value)) {\n      if (stringifyForRangeHack &&\n            propertyName == 'createContextualFragment') {\n        // IE 11 hack, somehow the value is not stringified implicitly.\n        args[argNumber] = args[argNumber].toString();\n      }\n      return apply(originalSetter, context, args);\n    }\n\n    if (typeToEnforce === TrustedTypes.TrustedScript) {\n      const isInlineEventHandler =\n          propertyName == 'setAttribute' ||\n          propertyName === 'setAttributeNS' ||\n          apply(slice, propertyName, [0, 2]) === 'on';\n      // If a function (instead of string) is passed to inline event attribute,\n      // or set(Timeout|Interval), pass through.\n      const propertyAcceptsFunctions =\n          propertyName === 'setInterval' ||\n          propertyName === 'setTimeout' ||\n          isInlineEventHandler;\n      if ((propertyAcceptsFunctions && typeof value === 'function') ||\n          (isInlineEventHandler && value === null)) {\n        return apply(originalSetter, context, args);\n      }\n    }\n\n    // Apply a fallback policy, if it exists.\n    args[argNumber] = '' + value;\n    const objName = this.instanceOfDomProperty(context, 'Element') ?\n        context['localName'] :\n        this.getConstructorName_(\n          context ? context.constructor : window.constructor);\n    const fallbackValue = this.maybeCallDefaultPolicy_(\n        typeName, value, objName + '.' + propertyName);\n    if (fallbackValue === null || fallbackValue === undefined) {\n      // This will throw a TypeError if enforcement is enabled.\n      this.processViolation_(context, propertyName, typeToEnforce, value);\n    } else {\n      // Use the value modified by the default policy.\n      args[argNumber] = fallbackValue;\n    }\n    return apply(originalSetter, context, args);\n  }\n\n  /**\n   * Report a TT violation.\n   * @param {!Object} context The object that the setter is called for.\n   * @param {string} propertyName The name of the property.\n   * @param {!Function} typeToEnforce The type to enforce.\n   * @param {string} value The value that was violated the restrictions.\n   * @throws {TypeError} if the enforcement is enabled.\n   */\n  processViolation_(context, propertyName, typeToEnforce, value) {\n    const contextName = this.getConstructorName_(context.constructor) ||\n        '' + context;\n    const message = `Failed to set ${propertyName} on ${contextName}: `\n        + `This property requires ${typeToEnforce.name}.`;\n\n    if (this.config_.isLoggingEnabled) {\n      // eslint-disable-next-line no-console\n      console.warn(message, propertyName, context, typeToEnforce, value);\n    }\n\n    // This is not available in release Firefox :(\n    // https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1432523\n    const SecurityPolicyViolationEvent_ =\n    this.windowObject['SecurityPolicyViolationEvent'] || null;\n\n    // Unconditionally dispatch an event.\n    if (typeof SecurityPolicyViolationEvent_ === 'function'\n    && this.windowObject.document) {\n      let blockedURI = '';\n      if (typeToEnforce === TrustedTypes.TrustedScriptURL) {\n        blockedURI = parseUrl_(value, this.windowObject) || '';\n        if (blockedURI) {\n          blockedURI = blockedURI.href;\n        }\n      }\n      const valueSlice = apply(slice, '' + value, [0, 40]);\n      const event = new SecurityPolicyViolationEvent_(\n          'securitypolicyviolation',\n          {\n            'bubbles': true,\n            'blockedURI': blockedURI,\n            'disposition': this.config_.isEnforcementEnabled ?\n              'enforce' : 'report',\n            'documentURI': this.windowObject.document.location.href,\n            'effectiveDirective': ENFORCEMENT_DIRECTIVE_NAME,\n            'originalPolicy': this.config_.cspString,\n            'statusCode': 0,\n            'violatedDirective': ENFORCEMENT_DIRECTIVE_NAME,\n            'sample': `${contextName}.${propertyName} ${valueSlice}`,\n          });\n      if (this.instanceOfDomProperty(context, 'Node') &&\n       context['isConnected']) {\n        context['dispatchEvent'](event);\n      } else { // Fallback - dispatch an event on base document.\n        this.windowObject.document.dispatchEvent(event);\n      }\n    }\n\n    if (this.config_.isEnforcementEnabled) {\n      throw new TypeError(message);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n */\n\n/**\n * @fileoverview Entry point for a polyfill that enforces the types.\n */\nimport {\n  trustedTypes,\n  TrustedTypesEnforcer,\n  TrustedTypeConfig,\n} from './api_only.js';\nimport {TrustedTypePolicy, TrustedTypePolicyFactory} from '../trustedtypes.js';\n\n/**\n * Sets up the public Trusted Types API in the global object.\n */\nfunction setupPolyfill() {\n  // We use array accessors to make sure Closure compiler will not alter the\n  // names of the properties..\n\n  // we setup the polyfill only in browser environment.\n  if (typeof window === 'undefined') {\n    return;\n  }\n  const rootProperty = 'trustedTypes';\n\n  // Convert old window.TrustedTypes to window.trustedTypes.\n  if (window['TrustedTypes'] && typeof window[rootProperty] === 'undefined') {\n    window[rootProperty] = Object.freeze(window['TrustedTypes']);\n  }\n\n  if (typeof window[rootProperty] !== 'undefined') {\n    return;\n  }\n\n  const publicApi = Object.create(TrustedTypePolicyFactory.prototype);\n  Object.assign(publicApi, {\n    isHTML: trustedTypes.isHTML,\n    isScriptURL: trustedTypes.isScriptURL,\n    isScript: trustedTypes.isScript,\n    createPolicy: trustedTypes.createPolicy,\n    getAttributeType: trustedTypes.getAttributeType,\n    getPropertyType: trustedTypes.getPropertyType,\n    getTypeMapping: trustedTypes.getTypeMapping,\n    emptyHTML: trustedTypes.emptyHTML,\n    emptyScript: trustedTypes.emptyScript,\n    _isPolyfill_: true,\n  });\n  Object.defineProperty(\n      publicApi,\n      'defaultPolicy',\n      Object.getOwnPropertyDescriptor(trustedTypes, 'defaultPolicy') || {}\n  );\n\n  window[rootProperty] = Object.freeze(publicApi);\n\n  window['TrustedHTML'] = trustedTypes.TrustedHTML;\n  window['TrustedScriptURL'] = trustedTypes.TrustedScriptURL;\n  window['TrustedScript'] = trustedTypes.TrustedScript;\n  window['TrustedTypePolicy'] = TrustedTypePolicy;\n  window['TrustedTypePolicyFactory'] = TrustedTypePolicyFactory;\n}\n\n/* eslint-enable no-unused-vars */\n\n/**\n * Tries to guess a CSP policy from:\n *  - the current polyfill script element text content (if prefixed with\n *    \"Content-Security-Policy:\")\n *  - the data-csp attribute value of the current script element.\n *  - meta header\n * @return {?string} Guessed CSP value, or null.\n */\nfunction detectPolicy() {\n  try {\n    const currentScript = document.currentScript || (function() {\n      const scripts = document.getElementsByTagName('script');\n      return scripts[scripts.length - 1];\n    })();\n\n    const bodyPrefix = 'Content-Security-Policy:';\n    if (currentScript &&\n            currentScript.textContent.trim().substr(0, bodyPrefix.length) ==\n                bodyPrefix) {\n      return currentScript.textContent.trim().slice(bodyPrefix.length);\n    }\n    if (currentScript.dataset['csp']) {\n      return currentScript.dataset['csp'];\n    }\n    const cspInMeta = document.head.querySelector(\n        'meta[http-equiv^=\"Content-Security-Policy\"]');\n    if (cspInMeta) {\n      return cspInMeta['content'].trim();\n    }\n  } catch (e) {\n    return null;\n  }\n  return null;\n}\n\n/**\n * Bootstraps all trusted types polyfill and their enforcement.\n */\nexport function bootstrap() {\n  const csp = detectPolicy();\n  const config = csp ? TrustedTypeConfig.fromCSP(csp) : new TrustedTypeConfig(\n      /* isLoggingEnabled */ false,\n      /* isEnforcementEnabled */ false,\n      /* allowedPolicyNames */ [],\n      /* allowDuplicates */ true);\n\n  const trustedTypesEnforcer = new TrustedTypesEnforcer(config);\n\n  trustedTypesEnforcer.install();\n}\n\n/**\n * Determines if the enforcement should be enabled.\n * @return {boolean}\n */\nfunction shouldBootstrap() {\n  for (const rootProperty of ['trustedTypes', 'TrustedTypes']) {\n    if (window[rootProperty] && !window[rootProperty]['_isPolyfill_']) {\n      // Native implementation exists\n      return false;\n    }\n  }\n  return true;\n}\n\n// Bootstrap only if native implementation is missing.\nif (shouldBootstrap()) {\n  setupPolyfill();\n  bootstrap();\n}\n"]}